{"version":3,"sources":["components/contexts/favoritesContexts.js","components/NavBar.js","components/SearchBar.js","components/ArrowsSvg.js","components/Pagination.js","components/Pokemon.js","components/Pokedex.js","Api.js","components/Footer.js","components/Index.js","App.js","index.js"],"names":["FavoriteContext","React","createContext","favoritePokemons","updateFavoritePokemons","id","FavoriteProvider","Provider","useContext","Navbar","src","alt","className","length","useState","Searchbar","props","onSearch","search","setSearch","onClick","e","a","placeholder","onChange","target","value","LeftArrow","xmlns","viewBox","width","height","d","fill","stroke","RightArrow","Pagination","onLeftClick","onRightClick","page","totalPages","Pokemon","pokemon","heart","includes","name","sprites","front_default","types","map","type","idx","preventDefault","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","searchPokemon","url","fetch","response","json","data","getPokemons","limit","offset","getPokemonData","Footer","href","useEffect","localStorageKey","App","setPokemons","setTotal","setLoading","favorites","setFavorites","notFound","setNotFound","searching","setSearching","fetchPokemons","promises","results","Promise","all","ceil","count","JSON","parse","window","localStorage","getItem","loadFavoritePokemons","result","updated","isFavorite","indexOf","splice","push","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e3edfb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FavoriteContext = React.createContext({\r\n  favoritePokemons: [],\r\n  updateFavoritePokemons: (id) => null\r\n});\r\n\r\nexport const FavoriteProvider = FavoriteContext.Provider;\r\n\r\nexport default FavoriteContext;","import React from 'react'\r\nimport FavoriteContext from './contexts/favoritesContexts'\r\nimport  './estilos.css'\r\nconst { useContext } = React;\r\n\r\nconst Navbar = () => {\r\n  const { favoritePokemons } = useContext(FavoriteContext);\r\n\r\n  let imgUrl =\r\n    \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\";\r\n\r\n  return (\r\n    <nav>\r\n      <div />\r\n      <div>\r\n        <img src={imgUrl} alt=\"pokeapi-logo\" className=\"navbar-image\" />\r\n      </div>\r\n      <div className=\"fav\" >&#10084;&#65039; {favoritePokemons.length}</div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport  './estilos.css'\r\nconst { useState } = React;\r\n\r\nconst Searchbar = (props) => {\r\n  const { onSearch } = props;\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value);\r\n    if (e.target.value.length === 0) {\r\n      onSearch(null);\r\n    }\r\n  };\r\n\r\n  const onClick = async (e) => {\r\n    onSearch(search);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchbar-container\">\r\n      <div className=\"searchbar\">\r\n        <input placeholder=\" Buscar pokemon \" onChange={onChange} />\r\n      </div>\r\n      <div className=\"searchbar-btn\">\r\n        <button onClick={onClick}>Buscar</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nexport const LeftArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M11.5 14.5l-4-4 4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RightArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M9.5 14.5l4-4-4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LeftArrow, RightArrow } from \"./ArrowsSvg\";\r\nimport  './estilos.css'\r\n\r\nconst Pagination = (props) => {\r\n  const { onLeftClick, onRightClick, page, totalPages } = props;\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button className=\"pagination-btn\" onClick={onLeftClick}>\r\n        <div className=\"icon\">\r\n          <LeftArrow />\r\n        </div>\r\n      </button>\r\n      <div>\r\n        {page} de {totalPages}\r\n      </div>\r\n      <button className=\"pagination-btn\" onClick={onRightClick}>\r\n        <div className=\"icon\">\r\n          <RightArrow />\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useContext } from \"react\";\r\nimport FavoriteContext from \"../components/contexts/favoritesContexts\";\r\nimport  './estilos.css'\r\n\r\nconst Pokemon = (props) => {\r\n  const { pokemon } = props;\r\n  const { favoritePokemons, updateFavoritePokemons } = useContext(\r\n    FavoriteContext\r\n  );\r\n\r\n  const redHeart = \"❤️\";\r\n  const blackHeart = \"🖤\";\r\n  const heart = favoritePokemons.includes(pokemon.name) ? redHeart : blackHeart;\r\n\r\n  const clickHeart = (e) => {\r\n    e.preventDefault();\r\n    updateFavoritePokemons(pokemon.name);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <div className=\"pokemon-img-container\">\r\n        <img\r\n          src={pokemon.sprites.front_default}\r\n          alt={pokemon.name}\r\n          className=\"pokemon-img\"\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"card-top\">\r\n          <h3>{pokemon.name}</h3>\r\n          <div>#{pokemon.id}</div>\r\n        </div>\r\n        <div className=\"card-bottom\">\r\n          <div className=\"pokemon-type\">\r\n            {pokemon.types.map((type, idx) => {\r\n              return (\r\n                <div key={idx} className=\"pokemon-type-text\">\r\n                  {type.type.name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button onClick={clickHeart} className=\"pokemon-heart-btn\">\r\n            <div className=\"pokemon-favorite\">{heart}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport  './estilos.css'\r\n\r\nconst Pokedex = (props) => {\r\n  const { pokemons, page, setPage, total, loading } = props;\r\n\r\n  const lastPage = () => {\r\n    const nextPage = Math.max(page - 1, 0);\r\n    setPage(nextPage);\r\n  };\r\n\r\n  const nextPage = () => {\r\n    const nextPage = Math.min(page + 1, total - 1);\r\n    setPage(nextPage);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Pokedex</h1>\r\n        <Pagination\r\n          page={page + 1}\r\n          totalPages={total}\r\n          onLeftClick={lastPage}\r\n          onRightClick={nextPage}\r\n        />\r\n      </div>\r\n      {loading ? (\r\n        <div className=\"diablo\">Cargando pokemones...</div>\r\n      ) : (\r\n        <div className=\"pokedex-grid\">\r\n          {pokemons.map((pokemon, idx) => {\r\n            return <Pokemon pokemon={pokemon} key={pokemon.name} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","export const searchPokemon = async (pokemon) => {\r\n    try {\r\n      let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {}\r\n  };\r\n  \r\n  export const getPokemons = async (limit = 25, offset = 0) => {\r\n    try {\r\n      let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {}\r\n  };\r\n  \r\n  export const getPokemonData = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (err) {}\r\n  };\r\n  ","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <div >\r\n      Creado por <a href=\"https://bit.ly/3AXn2x7\">Claud</a>\r\n    </div>\r\n    \r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./estilos.css\";\r\nimport Navbar from \"./NavBar\";\r\nimport Searchbar from \"./SearchBar\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport { getPokemonData, getPokemons, searchPokemon } from \"../Api\";\r\nimport { FavoriteProvider } from \"../components/contexts/favoritesContexts\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst { useState, useEffect } = React;\r\n\r\nconst localStorageKey = \"favorite_pokemon\";\r\n\r\nexport default function App() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  const fetchPokemons = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getPokemons(25, 25 * page);\r\n      const promises = data.results.map(async (pokemon) => {\r\n        return await getPokemonData(pokemon.url);\r\n      });\r\n      const results = await Promise.all(promises);\r\n      setPokemons(results);\r\n      setLoading(false);\r\n      setTotal(Math.ceil(data.count / 25));\r\n      setNotFound(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const loadFavoritePokemons = () => {\r\n    const pokemons =\r\n      JSON.parse(window.localStorage.getItem(localStorageKey)) || [];\r\n    setFavorites(pokemons);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFavoritePokemons();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searching) {\r\n      fetchPokemons();\r\n    }\r\n  }, [page]);\r\n\r\n  const updateFavoritePokemons = (name) => {\r\n    const updated = [...favorites];\r\n    const isFavorite = updated.indexOf(name);\r\n    if (isFavorite >= 0) {\r\n      updated.splice(isFavorite, 1);\r\n    } else {\r\n      updated.push(name);\r\n    }\r\n    setFavorites(updated);\r\n    window.localStorage.setItem(localStorageKey, JSON.stringify(updated));\r\n  };\r\n\r\n  const onSearch = async (pokemon) => {\r\n    if (!pokemon) {\r\n      return fetchPokemons();\r\n    }\r\n    setLoading(true);\r\n    setNotFound(false);\r\n    setSearching(true);\r\n    const result = await searchPokemon(pokemon);\r\n    if (!result) {\r\n      setNotFound(true);\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      setPokemons([result]);\r\n      setPage(0);\r\n      setTotal(1);\r\n    }\r\n    setLoading(false);\r\n    setSearching(false);\r\n  };\r\n\r\n  return (\r\n    <FavoriteProvider\r\n      value={{\r\n        favoritePokemons: favorites,\r\n        updateFavoritePokemons: updateFavoritePokemons\r\n      }}\r\n    >\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"App\">\r\n          <Searchbar onSearch={onSearch} />\r\n          {notFound ? (\r\n            <div className=\"not-found-text\">\r\n              No se encontro el Pokemn que buscabas 😭\r\n            </div>\r\n          ) : (\r\n            <Pokedex\r\n              loading={loading}\r\n              pokemons={pokemons}\r\n              page={page}\r\n              setPage={setPage}\r\n              total={total}\r\n            />\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </FavoriteProvider>\r\n  );\r\n}\r\n\r\n","import React from 'react'\nimport Index from './components/Index'\n\n\nconst App = () => {\n  return (\n    <div>\n      <Index/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}